/*
 * Copyright (c) 2018-present, lmyooyo@gmail.com.
 *
 * This source code is licensed under the GPL license found in the
 * LICENSE file in the root directory of this source tree.
 */

#ifndef FK_CODEC_FKSOURCESALLOCATOR_H
#define FK_CODEC_FKSOURCESALLOCATOR_H

#include "FkObject.h"

class FkSourcesAllocator;

FK_SUPER_CLASS(FkSources, FkObject) {
FK_DEF_CLASS_TYPE_FUNC(FkSources)

public:
    FkSources(FkSourcesAllocator *allocator);

    virtual ~FkSources();

    /**
     * Recycle source by HwSourcesAllocator.
     */
    virtual void recycle();

    /**
     * When allocator is null, this object will be in the detach state.
     * This means this sources isn`t manage by HwSourcesAllocator.
     * Usuallyï¼Œsource generated by cloning are not managed
     */
    bool isDetach();

protected:
    FkSourcesAllocator *allocator = nullptr;
};

FK_SUPER_CLASS(FkSourcesAllocator, FkObject) {
FK_DEF_CLASS_TYPE_FUNC(FkSourcesAllocator)

public:
    FkSourcesAllocator();

    virtual ~FkSourcesAllocator();

    virtual bool recycle(FkSources **entity) = 0;

};


#endif //FK_CODEC_FKSOURCESALLOCATOR_H
