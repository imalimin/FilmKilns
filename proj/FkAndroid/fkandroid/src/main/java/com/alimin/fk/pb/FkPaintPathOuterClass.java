// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FkPaintPath.proto

package com.alimin.fk.pb;

public final class FkPaintPathOuterClass {
  private FkPaintPathOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FkPaintPathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.alimin.fk.pb.FkPaintPath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>int32 color = 2;</code>
     * @return The color.
     */
    int getColor();

    /**
     * <code>repeated double points = 3;</code>
     * @return A list containing the points.
     */
    java.util.List<java.lang.Double> getPointsList();
    /**
     * <code>repeated double points = 3;</code>
     * @return The count of points.
     */
    int getPointsCount();
    /**
     * <code>repeated double points = 3;</code>
     * @param index The index of the element to return.
     * @return The points at the given index.
     */
    double getPoints(int index);
  }
  /**
   * Protobuf type {@code com.alimin.fk.pb.FkPaintPath}
   */
  public static final class FkPaintPath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.alimin.fk.pb.FkPaintPath)
      FkPaintPathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FkPaintPath.newBuilder() to construct.
    private FkPaintPath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FkPaintPath() {
      points_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FkPaintPath();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FkPaintPath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              type_ = input.readInt32();
              break;
            }
            case 16: {

              color_ = input.readInt32();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                points_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              points_.addDouble(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                points_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                points_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          points_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alimin.fk.pb.FkPaintPathOuterClass.internal_static_com_alimin_fk_pb_FkPaintPath_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alimin.fk.pb.FkPaintPathOuterClass.internal_static_com_alimin_fk_pb_FkPaintPath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.class, com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    /**
     * <code>int32 color = 2;</code>
     * @return The color.
     */
    @java.lang.Override
    public int getColor() {
      return color_;
    }

    public static final int POINTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.DoubleList points_;
    /**
     * <code>repeated double points = 3;</code>
     * @return A list containing the points.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getPointsList() {
      return points_;
    }
    /**
     * <code>repeated double points = 3;</code>
     * @return The count of points.
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated double points = 3;</code>
     * @param index The index of the element to return.
     * @return The points at the given index.
     */
    public double getPoints(int index) {
      return points_.getDouble(index);
    }
    private int pointsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      if (color_ != 0) {
        output.writeInt32(2, color_);
      }
      if (getPointsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(pointsMemoizedSerializedSize);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeDoubleNoTag(points_.getDouble(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (color_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, color_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPointsList().size();
        size += dataSize;
        if (!getPointsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        pointsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath)) {
        return super.equals(obj);
      }
      com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath other = (com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath) obj;

      if (getType()
          != other.getType()) return false;
      if (getColor()
          != other.getColor()) return false;
      if (!getPointsList()
          .equals(other.getPointsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getColor();
      if (getPointsCount() > 0) {
        hash = (37 * hash) + POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getPointsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.alimin.fk.pb.FkPaintPath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.alimin.fk.pb.FkPaintPath)
        com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alimin.fk.pb.FkPaintPathOuterClass.internal_static_com_alimin_fk_pb_FkPaintPath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alimin.fk.pb.FkPaintPathOuterClass.internal_static_com_alimin_fk_pb_FkPaintPath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.class, com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.Builder.class);
      }

      // Construct using com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        color_ = 0;

        points_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alimin.fk.pb.FkPaintPathOuterClass.internal_static_com_alimin_fk_pb_FkPaintPath_descriptor;
      }

      @java.lang.Override
      public com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath getDefaultInstanceForType() {
        return com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.getDefaultInstance();
      }

      @java.lang.Override
      public com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath build() {
        com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath buildPartial() {
        com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath result = new com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.color_ = color_;
        if (((bitField0_ & 0x00000001) != 0)) {
          points_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.points_ = points_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath) {
          return mergeFrom((com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath other) {
        if (other == com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getColor() != 0) {
          setColor(other.getColor());
        }
        if (!other.points_.isEmpty()) {
          if (points_.isEmpty()) {
            points_ = other.points_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePointsIsMutable();
            points_.addAll(other.points_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>int32 type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>int32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int color_ ;
      /**
       * <code>int32 color = 2;</code>
       * @return The color.
       */
      @java.lang.Override
      public int getColor() {
        return color_;
      }
      /**
       * <code>int32 color = 2;</code>
       * @param value The color to set.
       * @return This builder for chaining.
       */
      public Builder setColor(int value) {
        
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 color = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearColor() {
        
        color_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList points_ = emptyDoubleList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          points_ = mutableCopy(points_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double points = 3;</code>
       * @return A list containing the points.
       */
      public java.util.List<java.lang.Double>
          getPointsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(points_) : points_;
      }
      /**
       * <code>repeated double points = 3;</code>
       * @return The count of points.
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated double points = 3;</code>
       * @param index The index of the element to return.
       * @return The points at the given index.
       */
      public double getPoints(int index) {
        return points_.getDouble(index);
      }
      /**
       * <code>repeated double points = 3;</code>
       * @param index The index to set the value at.
       * @param value The points to set.
       * @return This builder for chaining.
       */
      public Builder setPoints(
          int index, double value) {
        ensurePointsIsMutable();
        points_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double points = 3;</code>
       * @param value The points to add.
       * @return This builder for chaining.
       */
      public Builder addPoints(double value) {
        ensurePointsIsMutable();
        points_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double points = 3;</code>
       * @param values The points to add.
       * @return This builder for chaining.
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, points_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double points = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPoints() {
        points_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.alimin.fk.pb.FkPaintPath)
    }

    // @@protoc_insertion_point(class_scope:com.alimin.fk.pb.FkPaintPath)
    private static final com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath();
    }

    public static com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FkPaintPath>
        PARSER = new com.google.protobuf.AbstractParser<FkPaintPath>() {
      @java.lang.Override
      public FkPaintPath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FkPaintPath(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FkPaintPath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FkPaintPath> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alimin.fk.pb.FkPaintPathOuterClass.FkPaintPath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_alimin_fk_pb_FkPaintPath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_alimin_fk_pb_FkPaintPath_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021FkPaintPath.proto\022\020com.alimin.fk.pb\":\n" +
      "\013FkPaintPath\022\014\n\004type\030\001 \001(\005\022\r\n\005color\030\002 \001(" +
      "\005\022\016\n\006points\030\003 \003(\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_alimin_fk_pb_FkPaintPath_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_alimin_fk_pb_FkPaintPath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_alimin_fk_pb_FkPaintPath_descriptor,
        new java.lang.String[] { "Type", "Color", "Points", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
